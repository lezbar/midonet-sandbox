# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[tags]
  # dc = "us-east-1"

# Configuration for telegraf agent
[agent]
  # Default data collection interval for all inputs
  interval = "10s"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  # Default data flushing interval for all outputs. You should not set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances.
  # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  # Run telegraf in debug mode
  debug = false
  # Override default hostname, if empty use os.Hostname()
  hostname = ""


###############################################################################
#                                  OUTPUTS                                    #
###############################################################################


# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  # The full HTTP or UDP endpoint URL for your InfluxDB instance.
  # Multiple urls can be specified but it is assumed that they are part of the same
  # cluster, this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = ["http://influxdb:8086"]
  # The target database for metrics (telegraf will create it if not exists)
  database = "telegraf" # required
  # Precision of writes, valid values are n, u, ms, s, m, and h
  # note: using second precision greatly helps InfluxDB compression
  precision = "s"

  # Connection timeout (for the connection with InfluxDB), formatted as a string.
  # If not provided, will default to 0 (no timeout)
  # timeout = "5s"
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  # Set the user agent for HTTP POSTs (can be useful for log differentiation)
  # user_agent = "telegraf"
  # Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  # udp_payload = 512


###############################################################################
#                                  INPUTS                                     #
###############################################################################


# Reads 'mntr' stats from one or many zookeeper servers
[[inputs.zookeeper]]
  # An array of address to gather stats about. Specify an ip or hostname
  # with port. ie localhost:2181, 10.0.0.1:2181, etc.

  # If no servers are specified, then localhost is used as the host.
  # If no port is specified, 2181 is used
  servers = ["zookeeper1:2181","zookeeper2:2181","zookeeper3:2181"]


###############################################################################
#                              SERVICE INPUTS                                 #
###############################################################################
[cpu]
  # Whether to report per-cpu stats or not
  percpu = true
  # Whether to report total system cpu stats or not
  totalcpu = true
  # Comment this line if you want the raw CPU time metrics
  drop = ["cpu_time"]

[[inputs.jolokia]]
context = "/jolokia/read"

[[inputs.jolokia.servers]]
  name = "zookeeper1"
  host = "zookeeper1"
  port = "8778"

[[inputs.jolokia.servers]]
  name = "zookeeper2"
  host = "zookeeper2"
  port = "8778"

[[inputs.jolokia.servers]]
  name = "zookeeper3"
  host = "zookeeper3"
  port = "8778"

[[inputs.jolokia.metrics]]
  name = "heap_memory_usage"
  jmx  = "/java.lang:type=Memory/HeapMemoryUsage"

[[inputs.jolokia.metrics]]
  name = "mem_before_gc_ps_surv_used"
  jmx  = "/java.lang:name=PS Scavenge,type=GarbageCollector/LastGcInfo/memoryUsageBeforeGc/PS Survivor Space/used"

[[inputs.jolokia.metrics]]
  name = "mem_after_gc_ps_surv_used"
  jmx  = "/java.lang:name=PS Scavenge,type=GarbageCollector/LastGcInfo/memoryUsageAfterGc/PS Survivor Space/used"

[[inputs.jolokia.metrics]]
  name = "gc_collection_time"
  jmx  = "/java.lang:name=PS Scavenge,type=GarbageCollector/CollectionTime"

[[inputs.jolokia.metrics]]
  name = "gc_collection_count"
  jmx  = "/java.lang:name=PS Scavenge,type=GarbageCollector/CollectionCount"
